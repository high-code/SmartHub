// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHub.Identity.Infrastructure;

namespace SmartHub.Identity.Migrations.IdentityServerDb
{
    [DbContext(typeof(IdentityServerDbContext))]
    [Migration("20210131105514_IdServerInit")]
    partial class IdServerInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientGrantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("GrantType")
                        .IsRequired()
                        .HasColumnName("grant_type")
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("pk_client_grant_types");

                    b.HasIndex("ClientId")
                        .HasName("ix_client_grant_types_client_id");

                    b.ToTable("client_grant_types");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientPostLogoutRedirectUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("PostLogoutRedirectUri")
                        .IsRequired()
                        .HasColumnName("post_logout_redirect_uri")
                        .HasMaxLength(2000);

                    b.HasKey("Id")
                        .HasName("pk_client_postlogout_redirect_uris");

                    b.HasIndex("ClientId")
                        .HasName("ix_client_postlogout_redirect_uris_client_id");

                    b.ToTable("client_postlogout_redirect_uris");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientRedirectUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("RedirectUri")
                        .IsRequired()
                        .HasColumnName("redirect_uri")
                        .HasMaxLength(2000);

                    b.HasKey("Id")
                        .HasName("pk_client_redirect_uris");

                    b.HasIndex("ClientId")
                        .HasName("ix_client_redirect_uris_client_id");

                    b.ToTable("client_redirect_uris");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnName("scope")
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("pk_client_scopes");

                    b.HasIndex("ClientId")
                        .HasName("ix_client_scopes_client_id");

                    b.ToTable("client_scopes");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientSecret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasMaxLength(4000);

                    b.HasKey("Id")
                        .HasName("pk_client_secrets");

                    b.HasIndex("ClientId")
                        .HasName("ix_client_secrets_client_id");

                    b.ToTable("client_secrets");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("AllowAccessTokensViaBrowser")
                        .HasColumnName("allow_access_tokens_via_browser");

                    b.Property<bool>("AlwaysIncludeUserClaimsInIdToken")
                        .HasColumnName("always_include_user_claims_in_id_token");

                    b.Property<string>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("ClientName")
                        .HasColumnName("client_name");

                    b.Property<bool>("RequireConsent")
                        .HasColumnName("require_consent");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_clients");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientGrantType", b =>
                {
                    b.HasOne("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", "Client")
                        .WithMany("AllowedGrantTypes")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_client_grant_types_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientPostLogoutRedirectUri", b =>
                {
                    b.HasOne("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", "Client")
                        .WithMany("PostLogoutRedirectUris")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_client_postlogout_redirect_uris_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientRedirectUri", b =>
                {
                    b.HasOne("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", "Client")
                        .WithMany("RedirectUris")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_client_redirect_uris_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientScope", b =>
                {
                    b.HasOne("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", "Client")
                        .WithMany("AllowedScopes")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_client_scopes_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartHub.Identity.Infrastructure.Entities.ClientSecret", b =>
                {
                    b.HasOne("SmartHub.Identity.Infrastructure.Entities.IdentityServerClient", "Client")
                        .WithMany("ClientSecrets")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_client_secrets_clients_client_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
